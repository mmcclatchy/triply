"""updated models

Revision ID: f29ff29b7670
Revises:
Create Date: 2020-11-24 12:54:14.655519

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f29ff29b7670'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cuisines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gas_stations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('place_id', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hotels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('stars', sa.Float(), nullable=False),
    sa.Column('place_id', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('restaurants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('place_id', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('cars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('api_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('restaurant_cuisines',
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('cuisine_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cuisine_id'], ['cuisines.id'], ),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.PrimaryKeyConstraint('restaurant_id', 'cuisine_id')
    )
    op.create_table('trips',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=False),
    sa.Column('daily_time_limit', sa.Integer(), nullable=False),
    sa.Column('stop_time_limit', sa.Integer(), nullable=False),
    sa.Column('toll', sa.Boolean(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('start_location', sa.String(length=255), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('end_location', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stops',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trip_id', sa.Integer(), nullable=False),
    sa.Column('trip_stop_num', sa.Integer(), nullable=False),
    sa.Column('coordinates', sa.String(length=255), nullable=False),
    sa.Column('gas_station_id', sa.Integer(), nullable=True),
    sa.Column('hotel_id', sa.Integer(), nullable=True),
    sa.Column('restaurant_id', sa.Integer(), nullable=True),
    sa.Column('star_min', sa.Integer(), nullable=True),
    sa.Column('star_max', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gas_station_id'], ['gas_stations.id'], ),
    sa.ForeignKeyConstraint(['hotel_id'], ['hotels.id'], ),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stop_cuisines',
    sa.Column('stop_id', sa.Integer(), nullable=False),
    sa.Column('cuisine_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cuisine_id'], ['cuisines.id'], ),
    sa.ForeignKeyConstraint(['stop_id'], ['stops.id'], ),
    sa.PrimaryKeyConstraint('stop_id', 'cuisine_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stop_cuisines')
    op.drop_table('stops')
    op.drop_table('trips')
    op.drop_table('restaurant_cuisines')
    op.drop_table('cars')
    op.drop_table('users')
    op.drop_table('restaurants')
    op.drop_table('hotels')
    op.drop_table('gas_stations')
    op.drop_table('cuisines')
    # ### end Alembic commands ###
